{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMeta.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/AuthorMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","createElement","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","DefaultLayout","bodyClass","isHome","site","allGhostSettings","edges","node","twitterUrl","twitter","replace","facebookUrl","facebook","react_default","Helmet_default","lang","type","codeinjection_styles","className","gatsby_browser_entry","to","logo","src","alt","title","gatsby_image_default","fixed","file","childImageSharp","href","target","rel","config","description","common_Navigation","navigation","navClass","bool","shape","DefaultLayoutSettingsQuery","Layout_DefaultLayout","Object","assign","_2417764204","PostCard","post","url","slug","readingTime","readingTimeHelper","feature_image","style","backgroundImage","tags","lib","visibility","autolink","featured","excerpt","primary_author","profile_image","name","arrayOf","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","label","defaultProps","Layout","common_PostCard","common_Pagination","m","require","default","getAuthorProperties","primaryAuthor","authorProfiles","push","website","_","compact","sameAsArray","length","join","image","fetchAuthorData","ImageMeta","content","property","ArticleMetaGhost","settings","canonical","ghostPost","author","publicTags","tagsHelper","fn","tag","primaryTag","shareImage","get","publisherLogo","resolve","meta_title","meta_description","og_title","og_description","published_at","updated_at","keyword","twitter_title","twitter_description","meta_ImageMeta","ArticleMetaQuery","ArticleMeta_ArticleMetaGhost","_1004981455","WebsiteMeta","bio","oneOf","WebsiteMetaQuery","WebsiteMeta_WebsiteMeta","_3093436507","AuthorMeta","AuthorMetaQuery","AuthorMeta_AuthorMeta","_4112685740","MetaData","location","pathname","ghostTag","ghostAuthor","ghostPage","ArticleMeta","meta_WebsiteMeta","meta_AuthorMeta","cover_image","MetaDataQuery","MetaData_MetaData","_2233248733","meta_MetaData","ProdPageRenderer","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"3-9bf657927a0739ff6a47.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\r\n    siteUrl: `https://gatsby.ghost.org`, // Site domain. Do not include a trailing slash!\r\n\r\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\r\n\r\n    siteTitleMeta: `Ghost Gatsby Starter`, // This allows an alternative site title for meta data for pages.\r\n    siteDescriptionMeta: `A starter template to build amazing static websites with Ghost and Gatsby`, // This allows an alternative site description for meta data for pages.\r\n\r\n    shareImageWidth: 1000, // Change to the width of your default share image\r\n    shareImageHeight: 523, // Change to the height of your default share image\r\n\r\n    shortTitle: `Ghost`, // Used for App manifest e.g. Mobile Home Screen\r\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\r\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\r\n    themeColor: `#15171A`, // Used for Offline Manifest\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { Link, StaticQuery, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nimport { Navigation } from '.'\r\nimport config from '../../utils/siteConfig'\r\n\r\n// Styles\r\nimport '../../styles/app.css'\r\n\r\n/**\r\n* Main layout component\r\n*\r\n* The Layout component wraps around each page and template.\r\n* It also provides the header, footer as well as the main\r\n* styles, and meta data for each page.\r\n*\r\n*/\r\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\r\n    const site = data.allGhostSettings.edges[0].node\r\n    const twitterUrl = site.twitter ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}` : null\r\n    const facebookUrl = site.facebook ? `https://www.facebook.com/${site.facebook.replace(/^\\//, ``)}` : null\r\n\r\n    return (\r\n    <>\r\n        <Helmet>\r\n            <html lang={site.lang} />\r\n            <style type=\"text/css\">{`${site.codeinjection_styles}`}</style>\r\n            <body className={bodyClass} />\r\n        </Helmet>\r\n\r\n        <div className=\"viewport\">\r\n\r\n            <div className=\"viewport-top\">\r\n                {/* The main header section on top of the screen */}\r\n                <header className=\"site-head\">\r\n                    <div className=\"container\">\r\n                        <div className=\"site-mast\">\r\n                            <div className=\"site-mast-left\">\r\n                                <Link to=\"/\">\r\n                                    {site.logo ?\r\n                                        <img className=\"site-logo\" src={site.logo} alt={site.title} />\r\n                                        : <Img fixed={data.file.childImageSharp.fixed} alt={site.title} />\r\n                                    }\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"site-mast-right\">\r\n                                { site.twitter && <a href={ twitterUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" /></a>}\r\n                                { site.facebook && <a href={ facebookUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" /></a>}\r\n                                <a className=\"site-nav-item\" href={ `https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/` } target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" /></a>\r\n                            </div>\r\n                        </div>\r\n                        { isHome ?\r\n                            <div className=\"site-banner\">\r\n                                <h1 className=\"site-banner-title\">{site.title}</h1>\r\n                                <p className=\"site-banner-desc\">{site.description}</p>\r\n                            </div> :\r\n                            null}\r\n                        <nav className=\"site-nav\">\r\n                            <div className=\"site-nav-left\">\r\n                                {/* The navigation items as setup in Ghost */}\r\n                                <Navigation data={site.navigation} navClass=\"site-nav-item\" />\r\n                            </div>\r\n                            <div className=\"site-nav-right\">\r\n                                <Link className=\"site-nav-button\" to=\"/about\">About</Link>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </header>\r\n\r\n                <main className=\"site-main\">\r\n                    {/* All the main content gets inserted here, index.js, post.js */}\r\n                    {children}\r\n                </main>\r\n\r\n            </div>\r\n\r\n            <div className=\"viewport-bottom\">\r\n                {/* The footer at the very bottom of the screen */}\r\n                <footer className=\"site-foot\">\r\n                    <div className=\"site-foot-nav container\">\r\n                        <div className=\"site-foot-nav-left\">\r\n                            <Link to=\"/\">{site.title}</Link> © 2019 &mdash; Published with <a className=\"site-foot-nav-item\" href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">Ghost</a>\r\n                        </div>\r\n                        <div className=\"site-foot-nav-right\">\r\n                            <Navigation data={site.navigation} navClass=\"site-foot-nav-item\" />\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nDefaultLayout.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    bodyClass: PropTypes.string,\r\n    isHome: PropTypes.bool,\r\n    data: PropTypes.shape({\r\n        allGhostSettings: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n}\r\n\r\nconst DefaultLayoutSettingsQuery = props => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query GhostSettings {\r\n                allGhostSettings {\r\n                    edges {\r\n                        node {\r\n                            ...GhostSettingsFields\r\n                        }\r\n                    }\r\n                }\r\n                file(relativePath: {eq: \"ghost-icon.png\"}) {\r\n                    childImageSharp {\r\n                        fixed(width: 30, height: 30) {\r\n                            ...GatsbyImageSharpFixed\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <DefaultLayout data={data} {...props} />}\r\n    />\r\n)\r\n\r\nexport default DefaultLayoutSettingsQuery\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\nimport { Tags } from '@tryghost/helpers-gatsby'\r\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\r\n\r\nconst PostCard = ({ post }) => {\r\n    const url = `/${post.slug}/`\r\n    const readingTime = readingTimeHelper(post)\r\n\r\n    return (\r\n        <Link to={url} className=\"post-card\">\r\n            <header className=\"post-card-header\">\r\n                {post.feature_image &&\r\n                    <div className=\"post-card-image\" style={{\r\n                        backgroundImage: `url(${post.feature_image})` ,\r\n                    }}></div>}\r\n                {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\r\n                {post.featured && <span>Featured</span>}\r\n                <h2 className=\"post-card-title\">{post.title}</h2>\r\n            </header>\r\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\r\n            <footer className=\"post-card-footer\">\r\n                <div className=\"post-card-footer-left\">\r\n                    <div className=\"post-card-avatar\">\r\n                        {post.primary_author.profile_image ?\r\n                            <img className=\"author-profile-image\" src={post.primary_author.profile_image} alt={post.primary_author.name}/> :\r\n                            <img className=\"default-avatar\" src=\"/images/icons/avatar.svg\" alt={post.primary_author.name}/>\r\n                        }\r\n                    </div>\r\n                    <span>{ post.primary_author.name }</span>\r\n                </div>\r\n                <div className=\"post-card-footer-right\">\r\n                    <div>{readingTime}</div>\r\n                </div>\r\n            </footer>\r\n        </Link>\r\n    )\r\n}\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        feature_image: PropTypes.string,\r\n        featured: PropTypes.bool,\r\n        tags: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                name: PropTypes.string,\r\n            })\r\n        ),\r\n        excerpt: PropTypes.string.isRequired,\r\n        primary_author: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            profile_image: PropTypes.string,\r\n        }).isRequired,\r\n    }).isRequired,\r\n}\r\n\r\nexport default PostCard\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Pagination = ({ pageContext }) => {\r\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\r\n\r\n    return (\r\n        <nav className=\"pagination\" role=\"navigation\">\r\n            <div>\r\n                {previousPagePath && (\r\n\r\n                    <Link to={previousPagePath} rel=\"prev\">\r\n                            Previous\r\n                    </Link>\r\n\r\n                )}\r\n            </div>\r\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\r\n            <div>\r\n                {nextPagePath && (\r\n\r\n                    <Link to={nextPagePath} rel=\"next\">\r\n                            Next\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nPagination.propTypes = {\r\n    pageContext: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'gatsby'\r\n\r\n/**\r\n* Navigation component\r\n*\r\n* The Navigation component takes an array of your Ghost\r\n* navigation property that is fetched from the settings.\r\n* It differentiates between absolute (external) and relative link (internal).\r\n* You can pass it a custom class for your own styles, but it will always fallback\r\n* to a `site-nav-item` class.\r\n*\r\n*/\r\nconst Navigation = ({ data, navClass }) => (\r\n    <>\r\n        {data.map((navItem, i) => {\r\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\r\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\r\n            } else {\r\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\r\n            }\r\n        })}\r\n    </>\r\n)\r\n\r\nNavigation.defaultProps = {\r\n    navClass: `site-nav-item`,\r\n}\r\n\r\nNavigation.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string.isRequired,\r\n            url: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    ).isRequired,\r\n    navClass: PropTypes.string,\r\n}\r\n\r\nexport default Navigation\r\n","export { default as Layout } from './Layout'\r\nexport { default as PostCard } from './PostCard'\r\nexport { default as Pagination } from './Pagination'\r\nexport { default as Navigation } from './Navigation'\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import _ from 'lodash'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const getAuthorProperties = (primaryAuthor) => {\r\n    let authorProfiles = []\r\n\r\n    authorProfiles.push(\r\n        primaryAuthor.website ? primaryAuthor.website : null,\r\n        primaryAuthor.twitter ? `https://twitter.com/${primaryAuthor.twitter.replace(/^@/, ``)}/` : null,\r\n        primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null\r\n    )\r\n\r\n    authorProfiles = _.compact(authorProfiles)\r\n\r\n    return {\r\n        name: primaryAuthor.name || null,\r\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\r\n        image: primaryAuthor.profile_image || null,\r\n        facebookUrl: primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null,\r\n    }\r\n}\r\n\r\ngetAuthorProperties.defaultProps = {\r\n    fetchAuthorData: false,\r\n}\r\n\r\ngetAuthorProperties.PropTypes = {\r\n    primaryAuthor: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        profile_image: PropTypes.string,\r\n        website: PropTypes.string,\r\n        twitter: PropTypes.string,\r\n        facebook: PropTypes.string,\r\n    }).isRequired,\r\n}\r\n\r\nexport default getAuthorProperties\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\nimport config from '../../../utils/siteConfig'\r\n\r\nconst ImageMeta = ({ image }) => {\r\n    if (!image) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <Helmet>\r\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n            <meta name=\"twitter:image\" content={image} />\r\n            <meta property=\"og:image\" content={image} />\r\n            <meta property=\"og:image:width\" content={config.shareImageWidth} />\r\n            <meta property=\"og:image:height\" content={config.shareImageHeight} />\r\n        </Helmet >\r\n    )\r\n}\r\n\r\nImageMeta.propTypes = {\r\n    image: PropTypes.string,\r\n}\r\n\r\nexport default ImageMeta\r\n","import React from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport url from 'url'\r\n\r\nimport getAuthorProperties from './getAuthorProperties'\r\nimport ImageMeta from './ImageMeta'\r\nimport config from '../../../utils/siteConfig'\r\n\r\nimport { tags as tagsHelper } from '@tryghost/helpers'\r\n\r\nconst ArticleMetaGhost = ({ data, settings, canonical }) => {\r\n    const ghostPost = data\r\n    settings = settings.allGhostSettings.edges[0].node\r\n\r\n    const author = getAuthorProperties(ghostPost.primary_author)\r\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\r\n    const primaryTag = publicTags[0] || ``\r\n    const shareImage = ghostPost.feature_image ? ghostPost.feature_image : _.get(settings, `cover_image`, null)\r\n    const publisherLogo = (settings.logo || config.siteIcon) ? url.resolve(config.siteUrl, (settings.logo || config.siteIcon)) : null\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{ghostPost.meta_title || ghostPost.title}</title>\r\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\r\n                <link rel=\"canonical\" href={canonical} />\r\n\r\n                <meta property=\"og:site_name\" content={settings.title} />\r\n                <meta property=\"og:type\" content=\"article\" />\r\n                <meta property=\"og:title\"\r\n                    content={\r\n                        ghostPost.og_title ||\r\n                        ghostPost.meta_title ||\r\n                        ghostPost.title\r\n                    }\r\n                />\r\n                <meta property=\"og:description\"\r\n                    content={\r\n                        ghostPost.og_description ||\r\n                        ghostPost.excerpt ||\r\n                        ghostPost.meta_description\r\n                    }\r\n                />\r\n                <meta property=\"og:url\" content={canonical} />\r\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\r\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\r\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\r\n                {author.facebookUrl && <meta property=\"article:author\" content={author.facebookUrl} />}\r\n\r\n                <meta name=\"twitter:title\"\r\n                    content={\r\n                        ghostPost.twitter_title ||\r\n                        ghostPost.meta_title ||\r\n                        ghostPost.title\r\n                    }\r\n                />\r\n                <meta name=\"twitter:description\"\r\n                    content={\r\n                        ghostPost.twitter_description ||\r\n                        ghostPost.excerpt ||\r\n                        ghostPost.meta_description\r\n                    }\r\n                />\r\n                <meta name=\"twitter:url\" content={canonical} />\r\n                <meta name=\"twitter:label1\" content=\"Written by\" />\r\n                <meta name=\"twitter:data1\" content={author.name} />\r\n                {primaryTag && <meta name=\"twitter:label2\" content=\"Filed under\" />}\r\n                {primaryTag && <meta name=\"twitter:data2\" content={primaryTag} />}\r\n\r\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\r\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\r\n                <script type=\"application/ld+json\">{`\r\n                    {\r\n                        \"@context\": \"https://schema.org/\",\r\n                        \"@type\": \"Article\",\r\n                        \"author\": {\r\n                            \"@type\": \"Person\",\r\n                            \"name\": \"${author.name}\",\r\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\r\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\r\n                        },\r\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\r\n                        \"headline\": \"${ghostPost.meta_title || ghostPost.title}\",\r\n                        \"url\": \"${canonical}\",\r\n                        \"datePublished\": \"${ghostPost.published_at}\",\r\n                        \"dateModified\": \"${ghostPost.updated_at}\",\r\n                        ${shareImage ? `\"image\": {\r\n                                \"@type\": \"ImageObject\",\r\n                                \"url\": \"${shareImage}\",\r\n                                \"width\": \"${config.shareImageWidth}\",\r\n                                \"height\": \"${config.shareImageHeight}\"\r\n                            },` : ``}\r\n                        \"publisher\": {\r\n                            \"@type\": \"Organization\",\r\n                            \"name\": \"${settings.title}\",\r\n                            \"logo\": {\r\n                                \"@type\": \"ImageObject\",\r\n                                \"url\": \"${publisherLogo}\",\r\n                                \"width\": 60,\r\n                                \"height\": 60\r\n                            }\r\n                        },\r\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\r\n                        \"mainEntityOfPage\": {\r\n                            \"@type\": \"WebPage\",\r\n                            \"@id\": \"${config.siteUrl}\"\r\n                        }\r\n                    }\r\n                `}</script>\r\n            </Helmet>\r\n            <ImageMeta image={shareImage} />\r\n        </>\r\n    )\r\n}\r\n\r\nArticleMetaGhost.propTypes = {\r\n    data: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        published_at: PropTypes.string.isRequired,\r\n        updated_at: PropTypes.string.isRequired,\r\n        meta_title: PropTypes.string,\r\n        meta_description: PropTypes.string,\r\n        primary_author: PropTypes.object.isRequired,\r\n        feature_image: PropTypes.string,\r\n        tags: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                name: PropTypes.string,\r\n                slug: PropTypes.string,\r\n                visibility: PropTypes.string,\r\n            })\r\n        ),\r\n        primaryTag: PropTypes.shape({\r\n            name: PropTypes.string,\r\n        }),\r\n        og_title: PropTypes.string,\r\n        og_description: PropTypes.string,\r\n        twitter_title: PropTypes.string,\r\n        twitter_description: PropTypes.string,\r\n        excerpt: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    settings: PropTypes.shape({\r\n        allGhostSettings: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    canonical: PropTypes.string.isRequired,\r\n}\r\n\r\nconst ArticleMetaQuery = props => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query GhostSettingsArticleMeta {\r\n                allGhostSettings {\r\n                    edges {\r\n                        node {\r\n                            ...GhostSettingsFields\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <ArticleMetaGhost settings={data} {...props} />}\r\n    />\r\n)\r\n\r\nexport default ArticleMetaQuery\r\n","import React from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport url from 'url'\r\n\r\nimport ImageMeta from './ImageMeta'\r\nimport config from '../../../utils/siteConfig'\r\n\r\nconst WebsiteMeta = ({ data, settings, canonical, title, description, image, type }) => {\r\n    settings = settings.allGhostSettings.edges[0].node\r\n\r\n    const publisherLogo = url.resolve(config.siteUrl, (settings.logo || config.siteIcon))\r\n    let shareImage = image || data.feature_image || _.get(settings, `cover_image`, null)\r\n\r\n    shareImage = shareImage ? url.resolve(config.siteUrl, shareImage) : null\r\n\r\n    description = description || data.meta_description || data.description || config.siteDescriptionMeta || settings.description\r\n    title = `${title || data.meta_title || data.name || data.title} - ${settings.title}`\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{title}</title>\r\n                <meta name=\"description\" content={description} />\r\n                <link rel=\"canonical\" href={canonical} />\r\n                <meta property=\"og:site_name\" content={settings.title} />\r\n                <meta property=\"og:type\" content=\"website\" />\r\n                <meta property=\"og:title\" content={title} />\r\n                <meta property=\"og:description\" content={description} />\r\n                <meta property=\"og:url\" content={canonical} />\r\n                <meta name=\"twitter:title\" content={title} />\r\n                <meta name=\"twitter:description\" content={description} />\r\n                <meta name=\"twitter:url\" content={canonical} />\r\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\r\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\r\n                <script type=\"application/ld+json\">{`\r\n                    {\r\n                        \"@context\": \"https://schema.org/\",\r\n                        \"@type\": \"${type}\",\r\n                        \"url\": \"${canonical}\",\r\n                        ${shareImage ? `\"image\": {\r\n                                \"@type\": \"ImageObject\",\r\n                                \"url\": \"${shareImage}\",\r\n                                \"width\": \"${config.shareImageWidth}\",\r\n                                \"height\": \"${config.shareImageHeight}\"\r\n                            },` : ``}\r\n                        \"publisher\": {\r\n                            \"@type\": \"Organization\",\r\n                            \"name\": \"${settings.title}\",\r\n                            \"logo\": {\r\n                                \"@type\": \"ImageObject\",\r\n                                \"url\": \"${publisherLogo}\",\r\n                                \"width\": 60,\r\n                                \"height\": 60\r\n                            }\r\n                        },\r\n                        \"mainEntityOfPage\": {\r\n                            \"@type\": \"WebPage\",\r\n                            \"@id\": \"${config.siteUrl}\"\r\n                        },\r\n                        \"description\": \"${description}\"\r\n                    }\r\n                `}</script>\r\n            </Helmet>\r\n            <ImageMeta image={shareImage} />\r\n        </>\r\n    )\r\n}\r\n\r\nWebsiteMeta.propTypes = {\r\n    data: PropTypes.shape({\r\n        title: PropTypes.string,\r\n        feature_image: PropTypes.string,\r\n        description: PropTypes.string,\r\n        bio: PropTypes.string,\r\n        profile_image: PropTypes.string,\r\n    }).isRequired,\r\n    settings: PropTypes.shape({\r\n        allGhostSettings: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    canonical: PropTypes.string.isRequired,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    image: PropTypes.string,\r\n    type: PropTypes.oneOf([`WebSite`, `Series`]).isRequired,\r\n}\r\n\r\nconst WebsiteMetaQuery = props => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query GhostSettingsWebsiteMeta {\r\n                allGhostSettings {\r\n                    edges {\r\n                        node {\r\n                            ...GhostSettingsFields\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <WebsiteMeta settings={data} {...props} />}\r\n    />\r\n)\r\n\r\nexport default WebsiteMetaQuery\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport ImageMeta from './ImageMeta'\r\nimport getAuthorProperties from './getAuthorProperties'\r\nimport config from '../../../utils/siteConfig'\r\n\r\nconst AuthorMeta = ({ data, settings, canonical }) => {\r\n    settings = settings.allGhostSettings.edges[0].node\r\n\r\n    const author = getAuthorProperties(data)\r\n    const shareImage = author.image || _.get(settings, `cover_image`, null)\r\n    const title = `${data.name} - ${settings.title}`\r\n    const description = data.bio || config.siteDescriptionMeta || settings.description\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{title}</title>\r\n                <meta name=\"description\" content={description} />\r\n                <link rel=\"canonical\" href={canonical} />\r\n                <meta property=\"og:site_name\" content={settings.title} />\r\n                <meta property=\"og:type\" content=\"profile\" />\r\n                <meta property=\"og:title\" content={title} />\r\n                <meta property=\"og:description\" content={description} />\r\n                <meta property=\"og:url\" content={canonical} />\r\n                <meta name=\"twitter:title\" content={title} />\r\n                <meta name=\"twitter:description\" content={description} />\r\n                <meta name=\"twitter:url\" content={canonical} />\r\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\r\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\r\n                <script type=\"application/ld+json\">{`\r\n                    {\r\n                        \"@context\": \"https://schema.org/\",\r\n                        \"@type\": \"Person\",\r\n                        \"name\": \"${data.name}\",\r\n                        ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray},` : ``}\r\n                        \"url\": \"${canonical}\",\r\n                        ${shareImage ? `\"image\": {\r\n                                \"@type\": \"ImageObject\",\r\n                                \"url\": \"${shareImage}\",\r\n                                \"width\": \"${config.shareImageWidth}\",\r\n                                \"height\": \"${config.shareImageHeight}\"\r\n                            },` : ``}\r\n                        \"mainEntityOfPage\": {\r\n                            \"@type\": \"WebPage\",\r\n                            \"@id\": \"${config.siteUrl}\"\r\n                        },\r\n                        \"description\": \"${description}\"\r\n                    }\r\n                `}</script>\r\n            </Helmet>\r\n            <ImageMeta image={shareImage} />\r\n        </>\r\n    )\r\n}\r\n\r\nAuthorMeta.propTypes = {\r\n    data: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        bio: PropTypes.string,\r\n        profile_image: PropTypes.string,\r\n        website: PropTypes.string,\r\n        twitter: PropTypes.string,\r\n        facebook: PropTypes.string,\r\n    }).isRequired,\r\n    settings: PropTypes.shape({\r\n        allGhostSettings: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    canonical: PropTypes.string.isRequired,\r\n}\r\n\r\nconst AuthorMetaQuery = props => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query GhostSettingsAuthorMeta {\r\n                allGhostSettings {\r\n                    edges {\r\n                        node {\r\n                            ...GhostSettingsFields\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <AuthorMeta settings={data} {...props} />}\r\n    />\r\n)\r\n\r\nexport default AuthorMetaQuery\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport url from 'url'\r\n\r\nimport config from '../../../utils/siteConfig'\r\nimport ArticleMeta from './ArticleMeta'\r\nimport WebsiteMeta from './WebsiteMeta'\r\nimport AuthorMeta from './AuthorMeta'\r\n\r\n/**\r\n* MetaData will generate all relevant meta data information incl.\r\n* JSON-LD (schema.org), Open Graph (Facebook) and Twitter properties.\r\n*\r\n*/\r\nconst MetaData = ({\r\n    data,\r\n    settings,\r\n    title,\r\n    description,\r\n    image,\r\n    location,\r\n}) => {\r\n    const canonical = url.resolve(config.siteUrl, location.pathname)\r\n    const { ghostPost, ghostTag, ghostAuthor, ghostPage } = data\r\n    settings = settings.allGhostSettings.edges[0].node\r\n\r\n    if (ghostPost) {\r\n        return (\r\n            <ArticleMeta\r\n                data={ghostPost}\r\n                canonical={canonical}\r\n            />\r\n        )\r\n    } else if (ghostTag) {\r\n        return (\r\n            <WebsiteMeta\r\n                data={ghostTag}\r\n                canonical={canonical}\r\n                type=\"Series\"\r\n            />\r\n        )\r\n    } else if (ghostAuthor) {\r\n        return (\r\n            <AuthorMeta\r\n                data={ghostAuthor}\r\n                canonical={canonical}\r\n            />\r\n        )\r\n    } else if (ghostPage) {\r\n        return (\r\n            <WebsiteMeta\r\n                data={ghostPage}\r\n                canonical={canonical}\r\n                type=\"WebSite\"\r\n            />\r\n        )\r\n    } else {\r\n        title = title || config.siteTitleMeta || settings.title\r\n        description = description || config.siteDescriptionMeta || settings.description\r\n        image = image || settings.cover_image || null\r\n\r\n        image = image ? url.resolve(config.siteUrl, image) : null\r\n\r\n        return (\r\n            <WebsiteMeta\r\n                data={{}}\r\n                canonical={canonical}\r\n                title={title}\r\n                description={description}\r\n                image={image}\r\n                type=\"WebSite\"\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nMetaData.defaultProps = {\r\n    data: {},\r\n}\r\n\r\nMetaData.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostPost: PropTypes.object,\r\n        ghostTag: PropTypes.object,\r\n        ghostAuthor: PropTypes.object,\r\n        ghostPage: PropTypes.object,\r\n    }).isRequired,\r\n    settings: PropTypes.shape({\r\n        allGhostSettings: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    image: PropTypes.string,\r\n}\r\n\r\nconst MetaDataQuery = props => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query GhostSettingsMetaData {\r\n                allGhostSettings {\r\n                    edges {\r\n                        node {\r\n                            title\r\n                            description\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <MetaData settings={data} {...props} />}\r\n    />\r\n)\r\n\r\nexport default MetaDataQuery\r\n","export { default as MetaData } from './MetaData'\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}